
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20141202 (SVN rev 60)
//----------------------------------------------------

package Parsers;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20141202 (SVN rev 60) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class sintactico_2 extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return tabla_simbolos2.class;
}

  /** Default constructor. */
  public sintactico_2() {super();}

  /** Constructor which sets the default scanner. */
  public sintactico_2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public sintactico_2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\007\000\002\002\004\000\002\002\003\000\002\003" +
    "\012\000\002\003\010\000\002\004\005\000\002\004\006" +
    "\000\002\004\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\022\000\004\004\006\001\002\000\004\002\000\001" +
    "\002\000\004\002\024\001\002\000\004\005\007\001\002" +
    "\000\004\015\010\001\002\000\004\006\011\001\002\000" +
    "\006\007\ufffb\010\012\001\002\000\006\011\020\016\017" +
    "\001\002\000\004\007\014\001\002\000\006\002\ufffe\012" +
    "\015\001\002\000\004\004\006\001\002\000\004\002\uffff" +
    "\001\002\000\004\011\022\001\002\000\006\007\ufffb\010" +
    "\012\001\002\000\004\007\ufffd\001\002\000\006\007\ufffb" +
    "\010\012\001\002\000\004\007\ufffc\001\002\000\004\002" +
    "\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\022\000\006\002\004\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\012\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\015" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\004" +
    "\020\001\001\000\002\001\001\000\004\004\022\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintactico_2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintactico_2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintactico_2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



/**Metodo al que se llama autom�ticamente ante alg�n error sintactico.*/
public static String columna="";
public static String cadena="";
public void syntax_error(Symbol s){
System.out.println("Error en la L�nea " + (s.right+1) +" Columna " +s.left+ ". Identificador " +s.value + " no reconocido." );
}
/**Metodo al que se llama en el momento en que ya no es posible una recuperaci�n de errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
System.out.println("Error en la L�nea " + (s.right+1)+ "Columna "+s.left+". Identificador " + s.value + " no reconocido.");
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$sintactico_2$actions {
  private final sintactico_2 parser;

  /** Constructor */
  CUP$sintactico_2$actions(sintactico_2 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$sintactico_2$do_action_part00000000(
    int                        CUP$sintactico_2$act_num,
    java_cup.runtime.lr_parser CUP$sintactico_2$parser,
    java.util.Stack            CUP$sintactico_2$stack,
    int                        CUP$sintactico_2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintactico_2$result;

      /* select the action based on the action number */
      switch (CUP$sintactico_2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIA EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-1)).value;
		RESULT = start_val;
              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-1)), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$sintactico_2$parser.done_parsing();
          return CUP$sintactico_2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIA ::= A 
            {
              Object RESULT =null;

              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("INICIA",0, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          return CUP$sintactico_2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // A ::= tcolum tletra tpunts Ollave B Cllave tcom A 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-6)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-6)).value;
		
switch(a.toString())
         {
             case "A":columna=columna+"0,";break;
             case "B":columna=columna+"1,";break;
             case "C":columna=columna+"2,";break;
             case "D":columna=columna+"3,";break;
             case "E":columna=columna+"4,";break;
             case "F":columna=columna+"5,";break;
             case "G":columna=columna+"6,";break;
             case "H":columna=columna+"7,";break;
             case "I":columna=columna+"8,";break;
             case "J":columna=columna+"9,";break;
             case "K":columna=columna+"10,";break;
             case "L":columna=columna+"11,";break;
             case "M":columna=columna+"12,";break;
             case "N":columna=columna+"13,";break;
             case "O":columna=columna+"14,";break;
             case "P":columna=columna+"15,";break;
             case "Q":columna=columna+"16,";break;
             case "R":columna=columna+"17,";break;
             case "S":columna=columna+"18,";break;
             case "T":columna=columna+"19,";break;
             case "U":columna=columna+"20,";break;
             case "V":columna=columna+"21,";break;
             case "W":columna=columna+"22,";break;
             case "X":columna=columna+"23,";break;
             case "Y":columna=columna+"24,";break;
             case "Z":columna=columna+"25,";break;
             
         }
              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("A",1, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-7)), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          return CUP$sintactico_2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // A ::= tcolum tletra tpunts Ollave B Cllave 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-4)).value;
		
switch(a.toString())
         {
             case "A":columna=columna+"0,";break;
             case "B":columna=columna+"1,";break;
             case "C":columna=columna+"2,";break;
             case "D":columna=columna+"3,";break;
             case "E":columna=columna+"4,";break;
             case "F":columna=columna+"5,";break;
             case "G":columna=columna+"6,";break;
             case "H":columna=columna+"7,";break;
             case "I":columna=columna+"8,";break;
             case "J":columna=columna+"9,";break;
             case "K":columna=columna+"10,";break;
             case "L":columna=columna+"11,";break;
             case "M":columna=columna+"12,";break;
             case "N":columna=columna+"13,";break;
             case "O":columna=columna+"14,";break;
             case "P":columna=columna+"15,";break;
             case "Q":columna=columna+"16,";break;
             case "R":columna=columna+"17,";break;
             case "S":columna=columna+"18,";break;
             case "T":columna=columna+"19,";break;
             case "U":columna=columna+"20,";break;
             case "V":columna=columna+"21,";break;
             case "W":columna=columna+"22,";break;
             case "X":columna=columna+"23,";break;
             case "Y":columna=columna+"24,";break;
             case "Z":columna=columna+"25,";break;
             
         }
              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("A",1, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-5)), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          return CUP$sintactico_2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // B ::= Ocorch Ccorch B 
            {
              Object RESULT =null;
		cadena=cadena+" ,";
              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("B",2, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-2)), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          return CUP$sintactico_2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // B ::= Ocorch tcasi Ccorch B 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-2)).value;
		cadena=cadena+a.toString()+",";
              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("B",2, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.elementAt(CUP$sintactico_2$top-3)), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          return CUP$sintactico_2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // B ::= 
            {
              Object RESULT =null;
		cadena=cadena+";";
              CUP$sintactico_2$result = parser.getSymbolFactory().newSymbol("B",2, ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), ((java_cup.runtime.Symbol)CUP$sintactico_2$stack.peek()), RESULT);
            }
          return CUP$sintactico_2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$sintactico_2$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$sintactico_2$do_action(
    int                        CUP$sintactico_2$act_num,
    java_cup.runtime.lr_parser CUP$sintactico_2$parser,
    java.util.Stack            CUP$sintactico_2$stack,
    int                        CUP$sintactico_2$top)
    throws java.lang.Exception
    {
              return CUP$sintactico_2$do_action_part00000000(
                               CUP$sintactico_2$act_num,
                               CUP$sintactico_2$parser,
                               CUP$sintactico_2$stack,
                               CUP$sintactico_2$top);
    }
}

}
